code .comment {
  color: var(--comment-gray);
}

code.html {
}

code.html .string {
  color: var(--dark-yellow);
}

code.html .tag {
  color: var(--blue);
}

code.html .constant {
  color: var(--light-red);
}

code.html .attribute {
  color: var(--light-yellow);
}

code.html .punctuation {
  color: var(--cyan);
}

code.superhtml {
}

code.superhtml .string.markup_link_url {
  text-decoration: underline;
  color: var(--blue);
}

code.superhtml .string {
  color: var(--dark-yellow);
}

code.superhtml .tag {
  color: var(--blue);
}

code.superhtml .special {
  color: var(--blue);
}

code.superhtml .constant {
  color: var(--light-red);
}

code.superhtml .attribute {
  color: var(--light-yellow);
}

code.superhtml .punctuation {
  color: var(--cyan);
}

code.zig {
}

code.zig .string {
  color: var(--dark-yellow);
}

code.zig .variable,
code.zig .field {
  color: var(--light-yellow);
}

code.zig .keyword.function {
  color: var(--light-red);
}

code.zig .bracket {
  color: var(--cyan);
}

code.zig .function {
  color: var(--blue);
}

code.zig .builtin {
  color: var(--magenta);
}

code.zig .operator,
code.zig .qualifier,
code.zig .attribute {
  color: var(--light-red);
}

code.ziggy {
  color: var(--cyan);
}

code.ziggy .keyword,
code.ziggy .type {
  color: var(--light-yellow);
}

code.ziggy .string {
  color: var(--dark-yellow);
}

code.ziggy .numeric.constant {
  color: var(--magenta);
}

code.ziggy .function {
  color: var(--blue);
}

code.ziggy-schema {
  color: var(--cyan);
}

code.ziggy-schema .keyword,
code.ziggy-schema .type {
  color: var(--light-yellow);
}

code.ziggy-schema .string {
  color: var(--dark-yellow);
}

code.ziggy-schema .numeric.constant {
  color: var(--magenta);
}

code.ziggy-schema .function {
  color: var(--blue);
}

code.markdown {
  color: var(--code-fg);
}

code.markdown .text.title {
  color: var(--light-red);
}

code.markdown .punctuation {
  color: var(--light-red);
}

code.toml {
  color: var(--cyan);
}

code.toml .property {
  color: var(--light-yellow);
}

code.toml .string {
  color: var(--dark-yellow);
}

code.toml .numeric.constant {
  color: var(--magenta);
}

code.toml .punctuation {
  color: var(--blue);
}

code.lua {
}

code.lua .string {
  color: var(--dark-yellow);
}

code.lua .variable,
code.lua .field {
  color: var(--light-yellow);
}

code.lua .keyword.function {
  color: var(--light-red);
}

code.lua .bracket {
  color: var(--cyan);
}

code.lua .function {
  color: var(--blue);
}

code.lua .builtin {
  color: var(--magenta);
}

code.lua .operator,
code.lua .qualifier,
code.lua .attribute {
  color: var(--light-red);
}

code.bash {
  display: block; /* Ensures it takes up full width for padding/margin */
  padding: 15px;
  border-radius: 8px;
  overflow-x: auto; /* Enable horizontal scrolling for long lines */
}

code.bash .function {
  color: var(--blue); /* Using --blue for commands and functions */
}

code.bash .string {
  color: var(--dark-yellow); /* Using --dark-yellow for strings */
}

code.bash .comment {
  color: var(--comment-gray); /* Using --comment-gray for comments */
  font-style: italic;
}

code.bash .operator,
code.bash .property {
  color: var(--light-red); /* Using --light-red for operators and properties */
}

:root {
  --light-yellow: #b58900;
  --dark-yellow: #b57614;
  --blue: #268bd2;
  --cyan: #2aa198;
  --light-red: #dc322f;
  --dark-red: #cb4b16;
  --comment-gray: #657b83;
  --magenta: #6c71c4;
}
code.markdown {
  color: #333;
}

code,
pre {
  background: var(--code-bg) !important;
  color: var(--code-fg) !important;
}

code.conf {
  color: var(--cyan);
}

code.conf .punctuation_bracket {
  color: var(--blue); /* [section] */
  font-weight: bold;
}

code.conf .function {
  color: var(--light-yellow); /* key */
}

code.conf .comment {
  color: var(--comment-gray); /* ; comment or # comment */
  font-style: italic;
}

/* TODO: cpp support */